T = int(input())

for tc in range(1, T + 1):
    mem = input()  # 복구해야할 값, 문자열로 저장
    n = len(mem)  # 메모리의 길이
    s = '0'*n  # 초기값
    cnt = 0
    # 101010 - 높은 비트부터 : 000000 -> 111111(6) -> 100000(5) -> 101111(4) -> 101000(3) -> 101011(2) -> 101010(1) => 총 6회
    # 010010 - 000000 -> 011111(5) -> 010000(4) -> 010010(2) => 3회
    # 1에서 0으로 , 0에서 1로 바뀌는 회수를 카운트하되 맨 앞자리 비트가 1이면 1회 추가
    for i in range(1, len(mem)):  # 문자열의 두번째 인덱스부터 앞자리와 비교 시작
        if mem[i] != mem[i - 1]:  # 앞자리 비트와 같지 않은 경우라면
            cnt += 1
    if mem[0] == '1':  # 맨 앞자리 비트가 1이면 1회 추가
        cnt += 1
    print(f'#{tc} {cnt}')

#
cnt = 0
now = '0'
num= input()
for i in range(len(num)):
    if num[i] != now:
        cnt += 1
        now = num[i]