1. 부분집합 중 합이 k가 되는 경우 구하기(길이 제한 없음) - DFS
2. 열 중복 없이 행의 개수만큼 2차원 배열에서 숫자를 뽑아서 최소합 구하기(순열 이용) - 백트래킹
최소합이므로 모든 경우에 가장 깊은 깊이 만큼 탐색할 필요가 없음
3. 최소곱 찾기(N개 중에 M개만 뽑는 경우)- DFS
최소곱이면서 집합에 음수인 원소도 있기 때문에 M개 모두를 뽑기 전에는 최소값인지 판단할 수 없음
4. 연속으로 카드 뽑기 - 백트래킹
연속하는 카드 간의 차가 4 미만인 경우 구하기(N개 중에 M개 뽑기)
완전탐색으로 모든 경우를 구해놓고 각 경우마다 카드의 차가 4이상인지 판별하지 않고 뽑는 단계에서 유망하지 않은 경우는 미리 쳐냄
